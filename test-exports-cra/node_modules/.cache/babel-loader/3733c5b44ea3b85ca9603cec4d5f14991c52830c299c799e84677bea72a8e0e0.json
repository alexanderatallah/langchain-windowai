{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Client = exports.AI_PROMPT = exports.HUMAN_PROMPT = void 0;\nconst fetch_event_source_1 = require(\"@fortaine/fetch-event-source\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nexports.HUMAN_PROMPT = \"\\n\\nHuman:\";\nexports.AI_PROMPT = \"\\n\\nAssistant:\";\nconst CLIENT_ID = \"anthropic-typescript/0.4.3\";\nconst DEFAULT_API_URL = \"https://api.anthropic.com\";\nvar Event;\n(function (Event) {\n  Event[\"Ping\"] = \"ping\";\n})(Event || (Event = {}));\nconst DONE_MESSAGE = \"[DONE]\";\nclass Client {\n  constructor(apiKey, options) {\n    var _a;\n    this.apiKey = apiKey;\n    this.apiUrl = (_a = options === null || options === void 0 ? void 0 : options.apiUrl) !== null && _a !== void 0 ? _a : DEFAULT_API_URL;\n  }\n  complete(params, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const response = yield (0, cross_fetch_1.default)(`${this.apiUrl}/v1/complete`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Client: CLIENT_ID,\n          \"X-API-Key\": this.apiKey\n        },\n        body: JSON.stringify(Object.assign(Object.assign({}, params), {\n          stream: false\n        })),\n        signal: options === null || options === void 0 ? void 0 : options.signal\n      });\n      if (!response.ok) {\n        const error = new Error(`Sampling error: ${response.status} ${response.statusText}`);\n        console.error(error);\n        throw error;\n      }\n      const completion = yield response.json();\n      return completion;\n    });\n  }\n  completeStream(params, _ref) {\n    let {\n      onOpen,\n      onUpdate,\n      signal\n    } = _ref;\n    const abortController = new AbortController();\n    return new Promise((resolve, reject) => {\n      signal === null || signal === void 0 ? void 0 : signal.addEventListener(\"abort\", event => {\n        abortController.abort(event);\n        reject({\n          name: \"AbortError\",\n          message: \"Caller aborted completeStream\"\n        });\n      });\n      (0, fetch_event_source_1.fetchEventSource)(`${this.apiUrl}/v1/complete`, {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Client: CLIENT_ID,\n          \"X-API-Key\": this.apiKey\n        },\n        body: JSON.stringify(Object.assign(Object.assign({}, params), {\n          stream: true\n        })),\n        signal: abortController.signal,\n        onopen: response => __awaiter(this, void 0, void 0, function* () {\n          if (!response.ok) {\n            abortController.abort();\n            return reject(Error(`Failed to open sampling stream, HTTP status code ${response.status}: ${response.statusText}`));\n          }\n          if (onOpen) {\n            yield Promise.resolve(onOpen(response));\n          }\n        }),\n        onmessage: ev => {\n          if (ev.event === Event.Ping) {\n            return;\n          }\n          if (ev.data === DONE_MESSAGE) {\n            console.error(\"Unexpected done message before stop_reason has been issued\");\n            return;\n          }\n          const completion = JSON.parse(ev.data);\n          if (onUpdate) {\n            Promise.resolve(onUpdate(completion)).catch(error => {\n              abortController.abort();\n              reject(error);\n            });\n          }\n          if (completion.stop_reason !== null) {\n            abortController.abort();\n            return resolve(completion);\n          }\n        },\n        onerror: error => {\n          console.error(\"Sampling error:\", error);\n          abortController.abort();\n          return reject(error);\n        }\n      });\n    });\n  }\n}\nexports.Client = Client;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","Client","AI_PROMPT","HUMAN_PROMPT","fetch_event_source_1","require","cross_fetch_1","CLIENT_ID","DEFAULT_API_URL","Event","DONE_MESSAGE","constructor","apiKey","options","_a","apiUrl","complete","params","response","default","method","headers","Accept","body","JSON","stringify","assign","stream","signal","ok","error","Error","status","statusText","console","completion","json","completeStream","_ref","onOpen","onUpdate","abortController","AbortController","addEventListener","event","abort","name","message","fetchEventSource","onopen","onmessage","ev","Ping","data","parse","catch","stop_reason","onerror"],"sources":["/Users/b/Code/langchainjs/node_modules/@anthropic-ai/sdk/build/src/index.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = exports.AI_PROMPT = exports.HUMAN_PROMPT = void 0;\nconst fetch_event_source_1 = require(\"@fortaine/fetch-event-source\");\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nexports.HUMAN_PROMPT = \"\\n\\nHuman:\";\nexports.AI_PROMPT = \"\\n\\nAssistant:\";\nconst CLIENT_ID = \"anthropic-typescript/0.4.3\";\nconst DEFAULT_API_URL = \"https://api.anthropic.com\";\nvar Event;\n(function (Event) {\n    Event[\"Ping\"] = \"ping\";\n})(Event || (Event = {}));\nconst DONE_MESSAGE = \"[DONE]\";\nclass Client {\n    constructor(apiKey, options) {\n        var _a;\n        this.apiKey = apiKey;\n        this.apiUrl = (_a = options === null || options === void 0 ? void 0 : options.apiUrl) !== null && _a !== void 0 ? _a : DEFAULT_API_URL;\n    }\n    complete(params, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield (0, cross_fetch_1.default)(`${this.apiUrl}/v1/complete`, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    Client: CLIENT_ID,\n                    \"X-API-Key\": this.apiKey,\n                },\n                body: JSON.stringify(Object.assign(Object.assign({}, params), { stream: false })),\n                signal: options === null || options === void 0 ? void 0 : options.signal,\n            });\n            if (!response.ok) {\n                const error = new Error(`Sampling error: ${response.status} ${response.statusText}`);\n                console.error(error);\n                throw error;\n            }\n            const completion = (yield response.json());\n            return completion;\n        });\n    }\n    completeStream(params, { onOpen, onUpdate, signal, }) {\n        const abortController = new AbortController();\n        return new Promise((resolve, reject) => {\n            signal === null || signal === void 0 ? void 0 : signal.addEventListener(\"abort\", (event) => {\n                abortController.abort(event);\n                reject({\n                    name: \"AbortError\",\n                    message: \"Caller aborted completeStream\",\n                });\n            });\n            (0, fetch_event_source_1.fetchEventSource)(`${this.apiUrl}/v1/complete`, {\n                method: \"POST\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    Client: CLIENT_ID,\n                    \"X-API-Key\": this.apiKey,\n                },\n                body: JSON.stringify(Object.assign(Object.assign({}, params), { stream: true })),\n                signal: abortController.signal,\n                onopen: (response) => __awaiter(this, void 0, void 0, function* () {\n                    if (!response.ok) {\n                        abortController.abort();\n                        return reject(Error(`Failed to open sampling stream, HTTP status code ${response.status}: ${response.statusText}`));\n                    }\n                    if (onOpen) {\n                        yield Promise.resolve(onOpen(response));\n                    }\n                }),\n                onmessage: (ev) => {\n                    if (ev.event === Event.Ping) {\n                        return;\n                    }\n                    if (ev.data === DONE_MESSAGE) {\n                        console.error(\"Unexpected done message before stop_reason has been issued\");\n                        return;\n                    }\n                    const completion = JSON.parse(ev.data);\n                    if (onUpdate) {\n                        Promise.resolve(onUpdate(completion)).catch((error) => {\n                            abortController.abort();\n                            reject(error);\n                        });\n                    }\n                    if (completion.stop_reason !== null) {\n                        abortController.abort();\n                        return resolve(completion);\n                    }\n                },\n                onerror: (error) => {\n                    console.error(\"Sampling error:\", error);\n                    abortController.abort();\n                    return reject(error);\n                },\n            });\n        });\n    }\n}\nexports.Client = Client;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}