{"ast":null,"code":"import jsonpointer from \"jsonpointer\";\nimport { Tool } from \"./base.js\";\nexport class JsonSpec {\n  constructor(obj) {\n    let max_value_length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 4000;\n    Object.defineProperty(this, \"obj\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"maxValueLength\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 4000\n    });\n    this.obj = obj;\n    this.maxValueLength = max_value_length;\n  }\n  getKeys(input) {\n    const pointer = jsonpointer.compile(input);\n    const res = pointer.get(this.obj);\n    if (typeof res === \"object\" && !Array.isArray(res) && res !== null) {\n      return Object.keys(res).join(\", \");\n    }\n    throw new Error(`Value at ${input} is not a dictionary, get the value directly instead.`);\n  }\n  getValue(input) {\n    const pointer = jsonpointer.compile(input);\n    const res = pointer.get(this.obj);\n    if (res === null || res === undefined) {\n      throw new Error(`Value at ${input} is null or undefined.`);\n    }\n    const str = typeof res === \"object\" ? JSON.stringify(res) : res.toString();\n    if (typeof res === \"object\" && !Array.isArray(res) && str.length > this.maxValueLength) {\n      return `Value is a large dictionary, should explore its keys directly.`;\n    }\n    if (str.length > this.maxValueLength) {\n      return `${str.slice(0, this.maxValueLength)}...`;\n    }\n    return str;\n  }\n}\nexport class JsonListKeysTool extends Tool {\n  constructor(jsonSpec) {\n    super();\n    Object.defineProperty(this, \"jsonSpec\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: jsonSpec\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"json_list_keys\"\n    });\n    Object.defineProperty(this, \"description\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: `Can be used to list all keys at a given path. \n    Before calling this you should be SURE that the path to this exists.\n    The input is a text representation of the path to the json as json pointer syntax (e.g. /key1/0/key2).`\n    });\n  }\n  async _call(input) {\n    try {\n      return this.jsonSpec.getKeys(input);\n    } catch (error) {\n      return `${error}`;\n    }\n  }\n}\nexport class JsonGetValueTool extends Tool {\n  constructor(jsonSpec) {\n    super();\n    Object.defineProperty(this, \"jsonSpec\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: jsonSpec\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"json_get_value\"\n    });\n    Object.defineProperty(this, \"description\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: `Can be used to see value in string format at a given path.\n    Before calling this you should be SURE that the path to this exists.\n    The input is a text representation of the path to the json as json pointer syntax (e.g. /key1/0/key2).`\n    });\n  }\n  async _call(input) {\n    try {\n      return this.jsonSpec.getValue(input);\n    } catch (error) {\n      return `${error}`;\n    }\n  }\n}","map":{"version":3,"names":["jsonpointer","Tool","JsonSpec","constructor","obj","max_value_length","arguments","length","undefined","Object","defineProperty","enumerable","configurable","writable","value","maxValueLength","getKeys","input","pointer","compile","res","get","Array","isArray","keys","join","Error","getValue","str","JSON","stringify","toString","slice","JsonListKeysTool","jsonSpec","_call","error","JsonGetValueTool"],"sources":["/Users/b/Code/langchainjs/langchain/dist/tools/json.js"],"sourcesContent":["import jsonpointer from \"jsonpointer\";\nimport { Tool } from \"./base.js\";\nexport class JsonSpec {\n    constructor(obj, max_value_length = 4000) {\n        Object.defineProperty(this, \"obj\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxValueLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4000\n        });\n        this.obj = obj;\n        this.maxValueLength = max_value_length;\n    }\n    getKeys(input) {\n        const pointer = jsonpointer.compile(input);\n        const res = pointer.get(this.obj);\n        if (typeof res === \"object\" && !Array.isArray(res) && res !== null) {\n            return Object.keys(res).join(\", \");\n        }\n        throw new Error(`Value at ${input} is not a dictionary, get the value directly instead.`);\n    }\n    getValue(input) {\n        const pointer = jsonpointer.compile(input);\n        const res = pointer.get(this.obj);\n        if (res === null || res === undefined) {\n            throw new Error(`Value at ${input} is null or undefined.`);\n        }\n        const str = typeof res === \"object\" ? JSON.stringify(res) : res.toString();\n        if (typeof res === \"object\" &&\n            !Array.isArray(res) &&\n            str.length > this.maxValueLength) {\n            return `Value is a large dictionary, should explore its keys directly.`;\n        }\n        if (str.length > this.maxValueLength) {\n            return `${str.slice(0, this.maxValueLength)}...`;\n        }\n        return str;\n    }\n}\nexport class JsonListKeysTool extends Tool {\n    constructor(jsonSpec) {\n        super();\n        Object.defineProperty(this, \"jsonSpec\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: jsonSpec\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"json_list_keys\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `Can be used to list all keys at a given path. \n    Before calling this you should be SURE that the path to this exists.\n    The input is a text representation of the path to the json as json pointer syntax (e.g. /key1/0/key2).`\n        });\n    }\n    async _call(input) {\n        try {\n            return this.jsonSpec.getKeys(input);\n        }\n        catch (error) {\n            return `${error}`;\n        }\n    }\n}\nexport class JsonGetValueTool extends Tool {\n    constructor(jsonSpec) {\n        super();\n        Object.defineProperty(this, \"jsonSpec\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: jsonSpec\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"json_get_value\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `Can be used to see value in string format at a given path.\n    Before calling this you should be SURE that the path to this exists.\n    The input is a text representation of the path to the json as json pointer syntax (e.g. /key1/0/key2).`\n        });\n    }\n    async _call(input) {\n        try {\n            return this.jsonSpec.getValue(input);\n        }\n        catch (error) {\n            return `${error}`;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}