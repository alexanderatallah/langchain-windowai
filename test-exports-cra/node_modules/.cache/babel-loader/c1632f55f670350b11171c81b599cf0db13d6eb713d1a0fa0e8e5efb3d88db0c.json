{"ast":null,"code":"import { Tool } from \"./base.js\";\nclass BingSerpAPI extends Tool {\n  constructor() {\n    let apiKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : typeof process !== \"undefined\" ?\n    // eslint-disable-next-line no-process-env\n    process.env.BingApiKey : undefined;\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"bing-search\"\n    });\n    Object.defineProperty(this, \"description\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"a search engine. useful for when you need to answer questions about current events. input should be a search query.\"\n    });\n    Object.defineProperty(this, \"key\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"params\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    if (!apiKey) {\n      throw new Error(\"BingSerpAPI API key not set. You can set it as BingApiKey in your .env file.\");\n    }\n    this.key = apiKey;\n    this.params = params;\n  }\n  async _call(input) {\n    const headers = {\n      \"Ocp-Apim-Subscription-Key\": this.key\n    };\n    const params = {\n      q: input,\n      textDecorations: \"true\",\n      textFormat: \"HTML\"\n    };\n    const searchUrl = new URL(\"https://api.bing.microsoft.com/v7.0/search\");\n    Object.entries(params).forEach(_ref => {\n      let [key, value] = _ref;\n      searchUrl.searchParams.append(key, value);\n    });\n    const response = await fetch(searchUrl, {\n      headers\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error ${response.status}`);\n    }\n    const res = await response.json();\n    const myresponse = res.webPages.value[0].snippet;\n    return myresponse;\n  }\n}\nexport { BingSerpAPI };","map":{"version":3,"names":["Tool","BingSerpAPI","constructor","apiKey","arguments","length","undefined","process","env","BingApiKey","params","Object","defineProperty","enumerable","configurable","writable","value","Error","key","_call","input","headers","q","textDecorations","textFormat","searchUrl","URL","entries","forEach","_ref","searchParams","append","response","fetch","ok","status","res","json","myresponse","webPages","snippet"],"sources":["/Users/b/Code/langchainjs/test-exports-cra/node_modules/langchain/dist/tools/bingserpapi.js"],"sourcesContent":["import { Tool } from \"./base.js\";\nclass BingSerpAPI extends Tool {\n    constructor(apiKey = typeof process !== \"undefined\"\n        ? // eslint-disable-next-line no-process-env\n            process.env.BingApiKey\n        : undefined, params = {}) {\n        super();\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"bing-search\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"a search engine. useful for when you need to answer questions about current events. input should be a search query.\"\n        });\n        Object.defineProperty(this, \"key\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"params\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (!apiKey) {\n            throw new Error(\"BingSerpAPI API key not set. You can set it as BingApiKey in your .env file.\");\n        }\n        this.key = apiKey;\n        this.params = params;\n    }\n    async _call(input) {\n        const headers = { \"Ocp-Apim-Subscription-Key\": this.key };\n        const params = { q: input, textDecorations: \"true\", textFormat: \"HTML\" };\n        const searchUrl = new URL(\"https://api.bing.microsoft.com/v7.0/search\");\n        Object.entries(params).forEach(([key, value]) => {\n            searchUrl.searchParams.append(key, value);\n        });\n        const response = await fetch(searchUrl, { headers });\n        if (!response.ok) {\n            throw new Error(`HTTP error ${response.status}`);\n        }\n        const res = await response.json();\n        const myresponse = res.webPages.value[0].snippet;\n        return myresponse;\n    }\n}\nexport { BingSerpAPI };\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,WAAW;AAChC,MAAMC,WAAW,SAASD,IAAI,CAAC;EAC3BE,WAAWA,CAAA,EAGmB;IAAA,IAHlBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,OAAOG,OAAO,KAAK,WAAW;IAC7C;IACEA,OAAO,CAACC,GAAG,CAACC,UAAU,GACxBH,SAAS;IAAA,IAAEI,MAAM,GAAAN,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACxB,KAAK,EAAE;IACPO,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;MAChCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE;IACX,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,aAAa,EAAE;MACvCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE;IACX,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE;MAC/BC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE;MAClCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACF,IAAI,CAACb,MAAM,EAAE;MACT,MAAM,IAAIc,KAAK,CAAC,8EAA8E,CAAC;IACnG;IACA,IAAI,CAACC,GAAG,GAAGf,MAAM;IACjB,IAAI,CAACO,MAAM,GAAGA,MAAM;EACxB;EACA,MAAMS,KAAKA,CAACC,KAAK,EAAE;IACf,MAAMC,OAAO,GAAG;MAAE,2BAA2B,EAAE,IAAI,CAACH;IAAI,CAAC;IACzD,MAAMR,MAAM,GAAG;MAAEY,CAAC,EAAEF,KAAK;MAAEG,eAAe,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAO,CAAC;IACxE,MAAMC,SAAS,GAAG,IAAIC,GAAG,CAAC,4CAA4C,CAAC;IACvEf,MAAM,CAACgB,OAAO,CAACjB,MAAM,CAAC,CAACkB,OAAO,CAACC,IAAA,IAAkB;MAAA,IAAjB,CAACX,GAAG,EAAEF,KAAK,CAAC,GAAAa,IAAA;MACxCJ,SAAS,CAACK,YAAY,CAACC,MAAM,CAACb,GAAG,EAAEF,KAAK,CAAC;IAC7C,CAAC,CAAC;IACF,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAACR,SAAS,EAAE;MAAEJ;IAAQ,CAAC,CAAC;IACpD,IAAI,CAACW,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIjB,KAAK,CAAE,cAAae,QAAQ,CAACG,MAAO,EAAC,CAAC;IACpD;IACA,MAAMC,GAAG,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;IACjC,MAAMC,UAAU,GAAGF,GAAG,CAACG,QAAQ,CAACvB,KAAK,CAAC,CAAC,CAAC,CAACwB,OAAO;IAChD,OAAOF,UAAU;EACrB;AACJ;AACA,SAASrC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}