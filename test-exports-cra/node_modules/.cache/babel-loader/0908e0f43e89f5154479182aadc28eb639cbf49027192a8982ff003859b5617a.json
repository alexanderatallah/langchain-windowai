{"ast":null,"code":"import { BaseCallbackHandler } from \"./base.js\";\nexport class BaseTracer extends BaseCallbackHandler {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"session\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"stack\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, \"executionOrder\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    this.alwaysVerbose = true;\n  }\n  async newSession(sessionName) {\n    const sessionCreate = {\n      start_time: Date.now(),\n      name: sessionName\n    };\n    const session = await this.persistSession(sessionCreate);\n    this.session = session;\n    return session;\n  }\n  _addChildRun(parentRun, childRun) {\n    if (childRun.type === \"llm\") {\n      parentRun.child_llm_runs.push(childRun);\n    } else if (childRun.type === \"chain\") {\n      parentRun.child_chain_runs.push(childRun);\n    } else if (childRun.type === \"tool\") {\n      parentRun.child_tool_runs.push(childRun);\n    } else {\n      throw new Error(\"Invalid run type\");\n    }\n  }\n  _startTrace(run) {\n    this.executionOrder += 1;\n    if (this.stack.length > 0) {\n      if (!(this.stack.at(-1)?.type === \"tool\" || this.stack.at(-1)?.type === \"chain\")) {\n        throw new Error(\"Nested run can only be logged for tool or chain\");\n      }\n      const parentRun = this.stack.at(-1);\n      this._addChildRun(parentRun, run);\n    }\n    this.stack.push(run);\n  }\n  async _endTrace() {\n    const run = this.stack.pop();\n    if (this.stack.length === 0 && run) {\n      this.executionOrder = 1;\n      await this.persistRun(run);\n    }\n  }\n  async handleLLMStart(llm, prompts, _verbose) {\n    if (this.session === undefined) {\n      this.session = await this.loadDefaultSession();\n    }\n    const run = {\n      start_time: Date.now(),\n      end_time: 0,\n      serialized: llm,\n      prompts,\n      session_id: this.session.id,\n      execution_order: this.executionOrder,\n      type: \"llm\"\n    };\n    this._startTrace(run);\n  }\n  async handleLLMEnd(output, _verbose) {\n    if (this.stack.length === 0 || this.stack.at(-1)?.type !== \"llm\") {\n      throw new Error(\"No LLM run to end.\");\n    }\n    const run = this.stack.at(-1);\n    run.end_time = Date.now();\n    run.response = output;\n    await this._endTrace();\n  }\n  async handleLLMError(error, _verbose) {\n    if (this.stack.length === 0 || this.stack.at(-1)?.type !== \"llm\") {\n      throw new Error(\"No LLM run to end.\");\n    }\n    const run = this.stack.at(-1);\n    run.end_time = Date.now();\n    run.error = error.message;\n    await this._endTrace();\n  }\n  async handleChainStart(chain, inputs, _verbose) {\n    if (this.session === undefined) {\n      this.session = await this.loadDefaultSession();\n    }\n    const run = {\n      start_time: Date.now(),\n      end_time: 0,\n      serialized: chain,\n      inputs,\n      session_id: this.session.id,\n      execution_order: this.executionOrder,\n      type: \"chain\",\n      child_llm_runs: [],\n      child_chain_runs: [],\n      child_tool_runs: []\n    };\n    this._startTrace(run);\n  }\n  async handleChainEnd(outputs, _verbose) {\n    if (this.stack.length === 0 || this.stack.at(-1)?.type !== \"chain\") {\n      throw new Error(\"No chain run to end.\");\n    }\n    const run = this.stack.at(-1);\n    run.end_time = Date.now();\n    run.outputs = outputs;\n    await this._endTrace();\n  }\n  async handleChainError(error, _verbose) {\n    if (this.stack.length === 0 || this.stack.at(-1)?.type !== \"chain\") {\n      throw new Error(\"No chain run to end.\");\n    }\n    const run = this.stack.at(-1);\n    run.end_time = Date.now();\n    run.error = error.message;\n    await this._endTrace();\n  }\n  async handleToolStart(tool, input, _verbose) {\n    if (this.session === undefined) {\n      this.session = await this.loadDefaultSession();\n    }\n    const run = {\n      start_time: Date.now(),\n      end_time: 0,\n      serialized: tool,\n      tool_input: input,\n      session_id: this.session.id,\n      execution_order: this.executionOrder,\n      type: \"tool\",\n      action: JSON.stringify(tool),\n      child_llm_runs: [],\n      child_chain_runs: [],\n      child_tool_runs: []\n    };\n    this._startTrace(run);\n  }\n  async handleToolEnd(output, _verbose) {\n    if (this.stack.length === 0 || this.stack.at(-1)?.type !== \"tool\") {\n      throw new Error(\"No tool run to end\");\n    }\n    const run = this.stack.at(-1);\n    run.end_time = Date.now();\n    run.output = output;\n    await this._endTrace();\n  }\n  async handleToolError(error, _verbose) {\n    if (this.stack.length === 0 || this.stack.at(-1)?.type !== \"tool\") {\n      throw new Error(\"No tool run to end.\");\n    }\n    const run = this.stack.at(-1);\n    run.end_time = Date.now();\n    run.error = error.message;\n    await this._endTrace();\n  }\n}\nexport class LangChainTracer extends BaseTracer {\n  constructor() {\n    super();\n    Object.defineProperty(this, \"endpoint\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: (typeof process !== \"undefined\" ?\n      // eslint-disable-next-line no-process-env\n      process.env.LANGCHAIN_ENDPOINT : undefined) || \"http://localhost:8000\"\n    });\n    Object.defineProperty(this, \"headers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    // eslint-disable-next-line no-process-env\n    if (typeof process !== \"undefined\" && process.env.LANGCHAIN_API_KEY) {\n      // eslint-disable-next-line no-process-env\n      this.headers[\"x-api-key\"] = process.env.LANGCHAIN_API_KEY;\n    }\n  }\n  async persistRun(run) {\n    let endpoint;\n    if (run.type === \"llm\") {\n      endpoint = `${this.endpoint}/llm-runs`;\n    } else if (run.type === \"chain\") {\n      endpoint = `${this.endpoint}/chain-runs`;\n    } else {\n      endpoint = `${this.endpoint}/tool-runs`;\n    }\n    const response = await fetch(endpoint, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify(run)\n    });\n    if (!response.ok) {\n      console.error(`Failed to persist run: ${response.status} ${response.statusText}`);\n    }\n  }\n  async persistSession(sessionCreate) {\n    const endpoint = `${this.endpoint}/sessions`;\n    const response = await fetch(endpoint, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify(sessionCreate)\n    });\n    if (!response.ok) {\n      console.error(`Failed to persist session: ${response.status} ${response.statusText}, using default session.`);\n      return {\n        id: 1,\n        ...sessionCreate\n      };\n    }\n    return {\n      id: (await response.json()).id,\n      ...sessionCreate\n    };\n  }\n  async loadSession(sessionName) {\n    const endpoint = `${this.endpoint}/sessions?name=${sessionName}`;\n    return this._handleSessionResponse(endpoint);\n  }\n  async loadDefaultSession() {\n    const endpoint = `${this.endpoint}/sessions?name=default`;\n    return this._handleSessionResponse(endpoint);\n  }\n  async _handleSessionResponse(endpoint) {\n    const response = await fetch(endpoint, {\n      method: \"GET\",\n      headers: this.headers\n    });\n    let tracerSession;\n    if (!response.ok) {\n      console.error(`Failed to load session: ${response.status} ${response.statusText}`);\n      tracerSession = {\n        id: 1,\n        start_time: Date.now()\n      };\n      this.session = tracerSession;\n      return tracerSession;\n    }\n    const resp = await response.json();\n    if (resp.length === 0) {\n      tracerSession = {\n        id: 1,\n        start_time: Date.now()\n      };\n      this.session = tracerSession;\n      return tracerSession;\n    }\n    [tracerSession] = resp;\n    this.session = tracerSession;\n    return tracerSession;\n  }\n}","map":{"version":3,"names":["BaseCallbackHandler","BaseTracer","constructor","Object","defineProperty","enumerable","configurable","writable","value","alwaysVerbose","newSession","sessionName","sessionCreate","start_time","Date","now","name","session","persistSession","_addChildRun","parentRun","childRun","type","child_llm_runs","push","child_chain_runs","child_tool_runs","Error","_startTrace","run","executionOrder","stack","length","at","_endTrace","pop","persistRun","handleLLMStart","llm","prompts","_verbose","undefined","loadDefaultSession","end_time","serialized","session_id","id","execution_order","handleLLMEnd","output","response","handleLLMError","error","message","handleChainStart","chain","inputs","handleChainEnd","outputs","handleChainError","handleToolStart","tool","input","tool_input","action","JSON","stringify","handleToolEnd","handleToolError","LangChainTracer","process","env","LANGCHAIN_ENDPOINT","LANGCHAIN_API_KEY","headers","endpoint","fetch","method","body","ok","console","status","statusText","json","loadSession","_handleSessionResponse","tracerSession","resp"],"sources":["/Users/b/Code/langchainjs/test-exports-cra/node_modules/langchain/dist/callbacks/tracers.js"],"sourcesContent":["import { BaseCallbackHandler } from \"./base.js\";\nexport class BaseTracer extends BaseCallbackHandler {\n    constructor() {\n        super();\n        Object.defineProperty(this, \"session\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stack\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"executionOrder\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        this.alwaysVerbose = true;\n    }\n    async newSession(sessionName) {\n        const sessionCreate = {\n            start_time: Date.now(),\n            name: sessionName,\n        };\n        const session = await this.persistSession(sessionCreate);\n        this.session = session;\n        return session;\n    }\n    _addChildRun(parentRun, childRun) {\n        if (childRun.type === \"llm\") {\n            parentRun.child_llm_runs.push(childRun);\n        }\n        else if (childRun.type === \"chain\") {\n            parentRun.child_chain_runs.push(childRun);\n        }\n        else if (childRun.type === \"tool\") {\n            parentRun.child_tool_runs.push(childRun);\n        }\n        else {\n            throw new Error(\"Invalid run type\");\n        }\n    }\n    _startTrace(run) {\n        this.executionOrder += 1;\n        if (this.stack.length > 0) {\n            if (!(this.stack.at(-1)?.type === \"tool\" ||\n                this.stack.at(-1)?.type === \"chain\")) {\n                throw new Error(\"Nested run can only be logged for tool or chain\");\n            }\n            const parentRun = this.stack.at(-1);\n            this._addChildRun(parentRun, run);\n        }\n        this.stack.push(run);\n    }\n    async _endTrace() {\n        const run = this.stack.pop();\n        if (this.stack.length === 0 && run) {\n            this.executionOrder = 1;\n            await this.persistRun(run);\n        }\n    }\n    async handleLLMStart(llm, prompts, _verbose) {\n        if (this.session === undefined) {\n            this.session = await this.loadDefaultSession();\n        }\n        const run = {\n            start_time: Date.now(),\n            end_time: 0,\n            serialized: llm,\n            prompts,\n            session_id: this.session.id,\n            execution_order: this.executionOrder,\n            type: \"llm\",\n        };\n        this._startTrace(run);\n    }\n    async handleLLMEnd(output, _verbose) {\n        if (this.stack.length === 0 || this.stack.at(-1)?.type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        const run = this.stack.at(-1);\n        run.end_time = Date.now();\n        run.response = output;\n        await this._endTrace();\n    }\n    async handleLLMError(error, _verbose) {\n        if (this.stack.length === 0 || this.stack.at(-1)?.type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        const run = this.stack.at(-1);\n        run.end_time = Date.now();\n        run.error = error.message;\n        await this._endTrace();\n    }\n    async handleChainStart(chain, inputs, _verbose) {\n        if (this.session === undefined) {\n            this.session = await this.loadDefaultSession();\n        }\n        const run = {\n            start_time: Date.now(),\n            end_time: 0,\n            serialized: chain,\n            inputs,\n            session_id: this.session.id,\n            execution_order: this.executionOrder,\n            type: \"chain\",\n            child_llm_runs: [],\n            child_chain_runs: [],\n            child_tool_runs: [],\n        };\n        this._startTrace(run);\n    }\n    async handleChainEnd(outputs, _verbose) {\n        if (this.stack.length === 0 || this.stack.at(-1)?.type !== \"chain\") {\n            throw new Error(\"No chain run to end.\");\n        }\n        const run = this.stack.at(-1);\n        run.end_time = Date.now();\n        run.outputs = outputs;\n        await this._endTrace();\n    }\n    async handleChainError(error, _verbose) {\n        if (this.stack.length === 0 || this.stack.at(-1)?.type !== \"chain\") {\n            throw new Error(\"No chain run to end.\");\n        }\n        const run = this.stack.at(-1);\n        run.end_time = Date.now();\n        run.error = error.message;\n        await this._endTrace();\n    }\n    async handleToolStart(tool, input, _verbose) {\n        if (this.session === undefined) {\n            this.session = await this.loadDefaultSession();\n        }\n        const run = {\n            start_time: Date.now(),\n            end_time: 0,\n            serialized: tool,\n            tool_input: input,\n            session_id: this.session.id,\n            execution_order: this.executionOrder,\n            type: \"tool\",\n            action: JSON.stringify(tool),\n            child_llm_runs: [],\n            child_chain_runs: [],\n            child_tool_runs: [],\n        };\n        this._startTrace(run);\n    }\n    async handleToolEnd(output, _verbose) {\n        if (this.stack.length === 0 || this.stack.at(-1)?.type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        const run = this.stack.at(-1);\n        run.end_time = Date.now();\n        run.output = output;\n        await this._endTrace();\n    }\n    async handleToolError(error, _verbose) {\n        if (this.stack.length === 0 || this.stack.at(-1)?.type !== \"tool\") {\n            throw new Error(\"No tool run to end.\");\n        }\n        const run = this.stack.at(-1);\n        run.end_time = Date.now();\n        run.error = error.message;\n        await this._endTrace();\n    }\n}\nexport class LangChainTracer extends BaseTracer {\n    constructor() {\n        super();\n        Object.defineProperty(this, \"endpoint\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: (typeof process !== \"undefined\"\n                ? // eslint-disable-next-line no-process-env\n                    process.env.LANGCHAIN_ENDPOINT\n                : undefined) || \"http://localhost:8000\"\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                \"Content-Type\": \"application/json\",\n            }\n        });\n        // eslint-disable-next-line no-process-env\n        if (typeof process !== \"undefined\" && process.env.LANGCHAIN_API_KEY) {\n            // eslint-disable-next-line no-process-env\n            this.headers[\"x-api-key\"] = process.env.LANGCHAIN_API_KEY;\n        }\n    }\n    async persistRun(run) {\n        let endpoint;\n        if (run.type === \"llm\") {\n            endpoint = `${this.endpoint}/llm-runs`;\n        }\n        else if (run.type === \"chain\") {\n            endpoint = `${this.endpoint}/chain-runs`;\n        }\n        else {\n            endpoint = `${this.endpoint}/tool-runs`;\n        }\n        const response = await fetch(endpoint, {\n            method: \"POST\",\n            headers: this.headers,\n            body: JSON.stringify(run),\n        });\n        if (!response.ok) {\n            console.error(`Failed to persist run: ${response.status} ${response.statusText}`);\n        }\n    }\n    async persistSession(sessionCreate) {\n        const endpoint = `${this.endpoint}/sessions`;\n        const response = await fetch(endpoint, {\n            method: \"POST\",\n            headers: this.headers,\n            body: JSON.stringify(sessionCreate),\n        });\n        if (!response.ok) {\n            console.error(`Failed to persist session: ${response.status} ${response.statusText}, using default session.`);\n            return {\n                id: 1,\n                ...sessionCreate,\n            };\n        }\n        return {\n            id: (await response.json()).id,\n            ...sessionCreate,\n        };\n    }\n    async loadSession(sessionName) {\n        const endpoint = `${this.endpoint}/sessions?name=${sessionName}`;\n        return this._handleSessionResponse(endpoint);\n    }\n    async loadDefaultSession() {\n        const endpoint = `${this.endpoint}/sessions?name=default`;\n        return this._handleSessionResponse(endpoint);\n    }\n    async _handleSessionResponse(endpoint) {\n        const response = await fetch(endpoint, {\n            method: \"GET\",\n            headers: this.headers,\n        });\n        let tracerSession;\n        if (!response.ok) {\n            console.error(`Failed to load session: ${response.status} ${response.statusText}`);\n            tracerSession = {\n                id: 1,\n                start_time: Date.now(),\n            };\n            this.session = tracerSession;\n            return tracerSession;\n        }\n        const resp = (await response.json());\n        if (resp.length === 0) {\n            tracerSession = {\n                id: 1,\n                start_time: Date.now(),\n            };\n            this.session = tracerSession;\n            return tracerSession;\n        }\n        [tracerSession] = resp;\n        this.session = tracerSession;\n        return tracerSession;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}