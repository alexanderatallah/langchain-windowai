{"ast":null,"code":"import { VectorDBQAChain } from \"../chains/vector_db_qa.js\";\nimport { Tool } from \"./base.js\";\nexport class VectorStoreQATool extends Tool {\n  constructor(name, description, fields) {\n    super();\n    Object.defineProperty(this, \"vectorStore\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"llm\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"description\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"chain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.name = name;\n    this.description = description;\n    this.vectorStore = fields.vectorStore;\n    this.llm = fields.llm;\n    this.chain = VectorDBQAChain.fromLLM(this.llm, this.vectorStore);\n  }\n  static getDescription(name, description) {\n    return `Useful for when you need to answer questions about ${name}. Whenever you need information about ${description} you should ALWAYS use this. Input should be a fully formed question.`;\n  }\n  async _call(input) {\n    return this.chain.run(input);\n  }\n}","map":{"version":3,"names":["VectorDBQAChain","Tool","VectorStoreQATool","constructor","name","description","fields","Object","defineProperty","enumerable","configurable","writable","value","vectorStore","llm","chain","fromLLM","getDescription","_call","input","run"],"sources":["/Users/b/Code/langchainjs/langchain/dist/tools/vectorstore.js"],"sourcesContent":["import { VectorDBQAChain } from \"../chains/vector_db_qa.js\";\nimport { Tool } from \"./base.js\";\nexport class VectorStoreQATool extends Tool {\n    constructor(name, description, fields) {\n        super();\n        Object.defineProperty(this, \"vectorStore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"chain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = name;\n        this.description = description;\n        this.vectorStore = fields.vectorStore;\n        this.llm = fields.llm;\n        this.chain = VectorDBQAChain.fromLLM(this.llm, this.vectorStore);\n    }\n    static getDescription(name, description) {\n        return `Useful for when you need to answer questions about ${name}. Whenever you need information about ${description} you should ALWAYS use this. Input should be a fully formed question.`;\n    }\n    async _call(input) {\n        return this.chain.run(input);\n    }\n}\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,IAAI,QAAQ,WAAW;AAChC,OAAO,MAAMC,iBAAiB,SAASD,IAAI,CAAC;EACxCE,WAAWA,CAACC,IAAI,EAAEC,WAAW,EAAEC,MAAM,EAAE;IACnC,KAAK,EAAE;IACPC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,aAAa,EAAE;MACvCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE;MAC/BC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;MAChCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,aAAa,EAAE;MACvCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACFL,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE;MACjCC,UAAU,EAAE,IAAI;MAChBC,YAAY,EAAE,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAE,KAAK;IAChB,CAAC,CAAC;IACF,IAAI,CAACR,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACQ,WAAW,GAAGP,MAAM,CAACO,WAAW;IACrC,IAAI,CAACC,GAAG,GAAGR,MAAM,CAACQ,GAAG;IACrB,IAAI,CAACC,KAAK,GAAGf,eAAe,CAACgB,OAAO,CAAC,IAAI,CAACF,GAAG,EAAE,IAAI,CAACD,WAAW,CAAC;EACpE;EACA,OAAOI,cAAcA,CAACb,IAAI,EAAEC,WAAW,EAAE;IACrC,OAAQ,sDAAqDD,IAAK,yCAAwCC,WAAY,uEAAsE;EAChM;EACA,MAAMa,KAAKA,CAACC,KAAK,EAAE;IACf,OAAO,IAAI,CAACJ,KAAK,CAACK,GAAG,CAACD,KAAK,CAAC;EAChC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}