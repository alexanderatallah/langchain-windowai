{"ast":null,"code":"import { BaseChain } from \"./base.js\";\nimport { loadQAStuffChain } from \"./question_answering/load.js\";\nexport class RetrievalQAChain extends BaseChain {\n  get inputKeys() {\n    return [this.inputKey];\n  }\n  constructor(fields) {\n    super();\n    Object.defineProperty(this, \"inputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"query\"\n    });\n    Object.defineProperty(this, \"outputKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"result\"\n    });\n    Object.defineProperty(this, \"retriever\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"combineDocumentsChain\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"returnSourceDocuments\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    this.retriever = fields.retriever;\n    this.combineDocumentsChain = fields.combineDocumentsChain;\n    this.inputKey = fields.inputKey ?? this.inputKey;\n    this.outputKey = fields.outputKey ?? this.outputKey;\n    this.returnSourceDocuments = fields.returnSourceDocuments ?? this.returnSourceDocuments;\n  }\n  async _call(values) {\n    if (!(this.inputKey in values)) {\n      throw new Error(`Question key ${this.inputKey} not found.`);\n    }\n    const question = values[this.inputKey];\n    const docs = await this.retriever.getRelevantDocuments(question);\n    const inputs = {\n      question,\n      input_documents: docs\n    };\n    const result = await this.combineDocumentsChain.call(inputs);\n    if (this.returnSourceDocuments) {\n      return {\n        ...result,\n        sourceDocuments: docs\n      };\n    }\n    return result;\n  }\n  _chainType() {\n    return \"retrieval_qa\";\n  }\n  static async deserialize(_data, _values) {\n    throw new Error(\"Not implemented\");\n  }\n  serialize() {\n    throw new Error(\"Not implemented\");\n  }\n  static fromLLM(llm, retriever, options) {\n    const qaChain = loadQAStuffChain(llm);\n    return new this({\n      retriever,\n      combineDocumentsChain: qaChain,\n      ...options\n    });\n  }\n}","map":{"version":3,"names":["BaseChain","loadQAStuffChain","RetrievalQAChain","inputKeys","inputKey","constructor","fields","Object","defineProperty","enumerable","configurable","writable","value","retriever","combineDocumentsChain","outputKey","returnSourceDocuments","_call","values","Error","question","docs","getRelevantDocuments","inputs","input_documents","result","call","sourceDocuments","_chainType","deserialize","_data","_values","serialize","fromLLM","llm","options","qaChain"],"sources":["/Users/b/Code/langchainjs/langchain/dist/chains/retrieval_qa.js"],"sourcesContent":["import { BaseChain } from \"./base.js\";\nimport { loadQAStuffChain } from \"./question_answering/load.js\";\nexport class RetrievalQAChain extends BaseChain {\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    constructor(fields) {\n        super();\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"query\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"result\"\n        });\n        Object.defineProperty(this, \"retriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"combineDocumentsChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnSourceDocuments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.retriever = fields.retriever;\n        this.combineDocumentsChain = fields.combineDocumentsChain;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.returnSourceDocuments =\n            fields.returnSourceDocuments ?? this.returnSourceDocuments;\n    }\n    async _call(values) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Question key ${this.inputKey} not found.`);\n        }\n        const question = values[this.inputKey];\n        const docs = await this.retriever.getRelevantDocuments(question);\n        const inputs = { question, input_documents: docs };\n        const result = await this.combineDocumentsChain.call(inputs);\n        if (this.returnSourceDocuments) {\n            return {\n                ...result,\n                sourceDocuments: docs,\n            };\n        }\n        return result;\n    }\n    _chainType() {\n        return \"retrieval_qa\";\n    }\n    static async deserialize(_data, _values) {\n        throw new Error(\"Not implemented\");\n    }\n    serialize() {\n        throw new Error(\"Not implemented\");\n    }\n    static fromLLM(llm, retriever, options) {\n        const qaChain = loadQAStuffChain(llm);\n        return new this({\n            retriever,\n            combineDocumentsChain: qaChain,\n            ...options,\n        });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}