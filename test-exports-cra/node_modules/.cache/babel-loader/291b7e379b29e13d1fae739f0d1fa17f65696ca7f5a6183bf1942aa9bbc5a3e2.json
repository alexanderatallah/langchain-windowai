{"ast":null,"code":"/* eslint-disable no-instanceof/no-instanceof */\nimport { z } from \"zod\";\nimport { BaseOutputParser, OutputParserException } from \"../schema/index.js\";\nfunction printSchema(schema) {\n  let depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  if (schema instanceof z.ZodString && schema._def.checks.some(check => check.kind === \"datetime\")) {\n    return \"datetime\";\n  }\n  if (schema instanceof z.ZodString) {\n    return \"string\";\n  }\n  if (schema instanceof z.ZodNumber) {\n    return \"number\";\n  }\n  if (schema instanceof z.ZodBoolean) {\n    return \"boolean\";\n  }\n  if (schema instanceof z.ZodDate) {\n    return \"date\";\n  }\n  if (schema instanceof z.ZodOptional) {\n    return `${printSchema(schema._def.innerType, depth)} // Optional`;\n  }\n  if (schema instanceof z.ZodArray) {\n    return `${printSchema(schema._def.type, depth)}[]`;\n  }\n  if (schema instanceof z.ZodObject) {\n    const indent = \"\\t\".repeat(depth);\n    const indentIn = \"\\t\".repeat(depth + 1);\n    return `{${schema._def.description ? ` // ${schema._def.description}` : \"\"}\n${Object.entries(schema.shape).map(_ref => {\n      let [key, value] = _ref;\n      return `${indentIn}\"${key}\": ${printSchema(value, depth + 1)}${value._def.description ? ` // ${value._def.description}` : \"\"}`;\n    }).join(\"\\n\")}\n${indent}}`;\n  }\n  throw new Error(`Unsupported type: ${schema._def.innerType}`);\n}\nexport class StructuredOutputParser extends BaseOutputParser {\n  constructor(schema) {\n    super();\n    Object.defineProperty(this, \"schema\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: schema\n    });\n  }\n  static fromZodSchema(schema) {\n    return new this(schema);\n  }\n  static fromNamesAndDescriptions(schemas) {\n    const zodSchema = z.object(Object.fromEntries(Object.entries(schemas).map(_ref2 => {\n      let [name, description] = _ref2;\n      return [name, z.string().describe(description)];\n    })));\n    return new this(zodSchema);\n  }\n  getFormatInstructions() {\n    return `The output should be a markdown code snippet formatted in the following schema:\n\n\\`\\`\\`json\n${printSchema(this.schema)}\n\\`\\`\\`\n`;\n  }\n  async parse(text) {\n    try {\n      const json = text.trim().split(\"```json\")[1].split(\"```\")[0].trim();\n      return this.schema.parse(JSON.parse(json));\n    } catch (e) {\n      throw new OutputParserException(`Failed to parse. Text: ${text}. Error: ${e}`);\n    }\n  }\n}","map":{"version":3,"names":["z","BaseOutputParser","OutputParserException","printSchema","schema","depth","arguments","length","undefined","ZodString","_def","checks","some","check","kind","ZodNumber","ZodBoolean","ZodDate","ZodOptional","innerType","ZodArray","type","ZodObject","indent","repeat","indentIn","description","Object","entries","shape","map","_ref","key","value","join","Error","StructuredOutputParser","constructor","defineProperty","enumerable","configurable","writable","fromZodSchema","fromNamesAndDescriptions","schemas","zodSchema","object","fromEntries","_ref2","name","string","describe","getFormatInstructions","parse","text","json","trim","split","JSON","e"],"sources":["/Users/b/Code/langchainjs/langchain/dist/output_parsers/structured.js"],"sourcesContent":["/* eslint-disable no-instanceof/no-instanceof */\nimport { z } from \"zod\";\nimport { BaseOutputParser, OutputParserException } from \"../schema/index.js\";\nfunction printSchema(schema, depth = 0) {\n    if (schema instanceof z.ZodString &&\n        schema._def.checks.some((check) => check.kind === \"datetime\")) {\n        return \"datetime\";\n    }\n    if (schema instanceof z.ZodString) {\n        return \"string\";\n    }\n    if (schema instanceof z.ZodNumber) {\n        return \"number\";\n    }\n    if (schema instanceof z.ZodBoolean) {\n        return \"boolean\";\n    }\n    if (schema instanceof z.ZodDate) {\n        return \"date\";\n    }\n    if (schema instanceof z.ZodOptional) {\n        return `${printSchema(schema._def.innerType, depth)} // Optional`;\n    }\n    if (schema instanceof z.ZodArray) {\n        return `${printSchema(schema._def.type, depth)}[]`;\n    }\n    if (schema instanceof z.ZodObject) {\n        const indent = \"\\t\".repeat(depth);\n        const indentIn = \"\\t\".repeat(depth + 1);\n        return `{${schema._def.description ? ` // ${schema._def.description}` : \"\"}\n${Object.entries(schema.shape)\n            .map(([key, value]) => `${indentIn}\"${key}\": ${printSchema(value, depth + 1)}${value._def.description\n            ? ` // ${value._def.description}`\n            : \"\"}`)\n            .join(\"\\n\")}\n${indent}}`;\n    }\n    throw new Error(`Unsupported type: ${schema._def.innerType}`);\n}\nexport class StructuredOutputParser extends BaseOutputParser {\n    constructor(schema) {\n        super();\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: schema\n        });\n    }\n    static fromZodSchema(schema) {\n        return new this(schema);\n    }\n    static fromNamesAndDescriptions(schemas) {\n        const zodSchema = z.object(Object.fromEntries(Object.entries(schemas).map(([name, description]) => [name, z.string().describe(description)])));\n        return new this(zodSchema);\n    }\n    getFormatInstructions() {\n        return `The output should be a markdown code snippet formatted in the following schema:\n\n\\`\\`\\`json\n${printSchema(this.schema)}\n\\`\\`\\`\n`;\n    }\n    async parse(text) {\n        try {\n            const json = text.trim().split(\"```json\")[1].split(\"```\")[0].trim();\n            return this.schema.parse(JSON.parse(json));\n        }\n        catch (e) {\n            throw new OutputParserException(`Failed to parse. Text: ${text}. Error: ${e}`);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}