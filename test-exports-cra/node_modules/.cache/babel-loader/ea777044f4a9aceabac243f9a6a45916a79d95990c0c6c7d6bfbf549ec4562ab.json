{"ast":null,"code":"import { BaseChatMemory } from \"./chat_memory.js\";\nimport { getBufferString } from \"./base.js\";\nimport { AsyncCaller } from \"../util/async_caller.js\";\nexport class MotorheadMemory extends BaseChatMemory {\n  constructor(fields) {\n    const {\n      sessionId,\n      motorheadURL,\n      memoryKey,\n      timeout,\n      returnMessages,\n      inputKey,\n      outputKey,\n      chatHistory,\n      ...rest\n    } = fields;\n    super({\n      returnMessages,\n      inputKey,\n      outputKey,\n      chatHistory\n    });\n    Object.defineProperty(this, \"motorheadURL\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"localhost:8080\"\n    });\n    Object.defineProperty(this, \"timeout\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 3000\n    });\n    Object.defineProperty(this, \"memoryKey\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"history\"\n    });\n    Object.defineProperty(this, \"sessionId\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"context\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"caller\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.caller = new AsyncCaller(rest);\n    this.sessionId = sessionId;\n    this.motorheadURL = motorheadURL ?? this.motorheadURL;\n    this.memoryKey = memoryKey ?? this.memoryKey;\n    this.timeout = timeout ?? this.timeout;\n  }\n  async init() {\n    const res = await this.caller.call(fetch, `${this.motorheadURL}/sessions/${this.sessionId}/memory`, {\n      signal: this.timeout ? AbortSignal.timeout(this.timeout) : undefined,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const {\n      messages = [],\n      context = \"NONE\"\n    } = await res.json();\n    messages.forEach(message => {\n      if (message.role === \"AI\") {\n        this.chatHistory.addAIChatMessage(message.content);\n      } else {\n        this.chatHistory.addUserMessage(message.content);\n      }\n    });\n    if (context && context !== \"NONE\") {\n      this.context = context;\n    }\n  }\n  async loadMemoryVariables(_values) {\n    if (this.returnMessages) {\n      const result = {\n        [this.memoryKey]: this.chatHistory.messages\n      };\n      return result;\n    }\n    const result = {\n      [this.memoryKey]: getBufferString(this.chatHistory.messages)\n    };\n    return result;\n  }\n  async saveContext(inputValues, outputValues) {\n    await Promise.all([this.caller.call(fetch, `${this.motorheadURL}/sessions/${this.sessionId}/memory`, {\n      signal: this.timeout ? AbortSignal.timeout(this.timeout) : undefined,\n      method: \"POST\",\n      body: JSON.stringify({\n        messages: [{\n          role: \"Human\",\n          content: `${inputValues.input}`\n        }, {\n          role: \"AI\",\n          content: `${outputValues.response}`\n        }]\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }), super.saveContext(inputValues, outputValues)]);\n  }\n}","map":{"version":3,"names":["BaseChatMemory","getBufferString","AsyncCaller","MotorheadMemory","constructor","fields","sessionId","motorheadURL","memoryKey","timeout","returnMessages","inputKey","outputKey","chatHistory","rest","Object","defineProperty","enumerable","configurable","writable","value","caller","init","res","call","fetch","signal","AbortSignal","undefined","headers","messages","context","json","forEach","message","role","addAIChatMessage","content","addUserMessage","loadMemoryVariables","_values","result","saveContext","inputValues","outputValues","Promise","all","method","body","JSON","stringify","input","response"],"sources":["/Users/b/Code/langchainjs/langchain/dist/memory/motorhead_memory.js"],"sourcesContent":["import { BaseChatMemory } from \"./chat_memory.js\";\nimport { getBufferString, } from \"./base.js\";\nimport { AsyncCaller } from \"../util/async_caller.js\";\nexport class MotorheadMemory extends BaseChatMemory {\n    constructor(fields) {\n        const { sessionId, motorheadURL, memoryKey, timeout, returnMessages, inputKey, outputKey, chatHistory, ...rest } = fields;\n        super({ returnMessages, inputKey, outputKey, chatHistory });\n        Object.defineProperty(this, \"motorheadURL\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"localhost:8080\"\n        });\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3000\n        });\n        Object.defineProperty(this, \"memoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"history\"\n        });\n        Object.defineProperty(this, \"sessionId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"context\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.caller = new AsyncCaller(rest);\n        this.sessionId = sessionId;\n        this.motorheadURL = motorheadURL ?? this.motorheadURL;\n        this.memoryKey = memoryKey ?? this.memoryKey;\n        this.timeout = timeout ?? this.timeout;\n    }\n    async init() {\n        const res = await this.caller.call(fetch, `${this.motorheadURL}/sessions/${this.sessionId}/memory`, {\n            signal: this.timeout ? AbortSignal.timeout(this.timeout) : undefined,\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        });\n        const { messages = [], context = \"NONE\" } = await res.json();\n        messages.forEach((message) => {\n            if (message.role === \"AI\") {\n                this.chatHistory.addAIChatMessage(message.content);\n            }\n            else {\n                this.chatHistory.addUserMessage(message.content);\n            }\n        });\n        if (context && context !== \"NONE\") {\n            this.context = context;\n        }\n    }\n    async loadMemoryVariables(_values) {\n        if (this.returnMessages) {\n            const result = {\n                [this.memoryKey]: this.chatHistory.messages,\n            };\n            return result;\n        }\n        const result = {\n            [this.memoryKey]: getBufferString(this.chatHistory.messages),\n        };\n        return result;\n    }\n    async saveContext(inputValues, outputValues) {\n        await Promise.all([\n            this.caller.call(fetch, `${this.motorheadURL}/sessions/${this.sessionId}/memory`, {\n                signal: this.timeout ? AbortSignal.timeout(this.timeout) : undefined,\n                method: \"POST\",\n                body: JSON.stringify({\n                    messages: [\n                        { role: \"Human\", content: `${inputValues.input}` },\n                        { role: \"AI\", content: `${outputValues.response}` },\n                    ],\n                }),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            }),\n            super.saveContext(inputValues, outputValues),\n        ]);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}