{"ast":null,"code":"import { LangChainTracer } from \"./tracers.js\";\nimport { CallbackManager, ConsoleCallbackHandler } from \"./base.js\";\nexport class SingletonCallbackManager extends CallbackManager {\n  constructor() {\n    super();\n  }\n  static getInstance() {\n    if (!SingletonCallbackManager.instance) {\n      SingletonCallbackManager.instance = new SingletonCallbackManager();\n      SingletonCallbackManager.instance.addHandler(new ConsoleCallbackHandler());\n      if (typeof process !== \"undefined\" &&\n      // eslint-disable-next-line no-process-env\n      process.env.LANGCHAIN_HANDLER === \"langchain\") {\n        SingletonCallbackManager.instance.addHandler(new LangChainTracer());\n      }\n    }\n    return SingletonCallbackManager.instance;\n  }\n}\nexport function getCallbackManager() {\n  return SingletonCallbackManager.getInstance();\n}\nexport async function setTracerSession(options) {\n  let callbackManager = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getCallbackManager();\n  for (const handler of callbackManager.handlers) {\n    // fine to use instanceof here because we're in the same package\n    // eslint-disable-next-line no-instanceof/no-instanceof\n    if (handler instanceof LangChainTracer) {\n      const sessionName = options?.sessionName;\n      if (sessionName) {\n        await handler.loadSession(sessionName);\n      } else {\n        await handler.loadDefaultSession();\n      }\n    }\n  }\n}","map":{"version":3,"names":["LangChainTracer","CallbackManager","ConsoleCallbackHandler","SingletonCallbackManager","constructor","getInstance","instance","addHandler","process","env","LANGCHAIN_HANDLER","getCallbackManager","setTracerSession","options","callbackManager","arguments","length","undefined","handler","handlers","sessionName","loadSession","loadDefaultSession"],"sources":["/Users/b/Code/langchainjs/langchain/dist/callbacks/utils.js"],"sourcesContent":["import { LangChainTracer } from \"./tracers.js\";\nimport { CallbackManager, ConsoleCallbackHandler } from \"./base.js\";\nexport class SingletonCallbackManager extends CallbackManager {\n    constructor() {\n        super();\n    }\n    static getInstance() {\n        if (!SingletonCallbackManager.instance) {\n            SingletonCallbackManager.instance = new SingletonCallbackManager();\n            SingletonCallbackManager.instance.addHandler(new ConsoleCallbackHandler());\n            if (typeof process !== \"undefined\" &&\n                // eslint-disable-next-line no-process-env\n                process.env.LANGCHAIN_HANDLER === \"langchain\") {\n                SingletonCallbackManager.instance.addHandler(new LangChainTracer());\n            }\n        }\n        return SingletonCallbackManager.instance;\n    }\n}\nexport function getCallbackManager() {\n    return SingletonCallbackManager.getInstance();\n}\nexport async function setTracerSession(options, callbackManager = getCallbackManager()) {\n    for (const handler of callbackManager.handlers) {\n        // fine to use instanceof here because we're in the same package\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (handler instanceof LangChainTracer) {\n            const sessionName = options?.sessionName;\n            if (sessionName) {\n                await handler.loadSession(sessionName);\n            }\n            else {\n                await handler.loadDefaultSession();\n            }\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,cAAc;AAC9C,SAASC,eAAe,EAAEC,sBAAsB,QAAQ,WAAW;AACnE,OAAO,MAAMC,wBAAwB,SAASF,eAAe,CAAC;EAC1DG,WAAWA,CAAA,EAAG;IACV,KAAK,EAAE;EACX;EACA,OAAOC,WAAWA,CAAA,EAAG;IACjB,IAAI,CAACF,wBAAwB,CAACG,QAAQ,EAAE;MACpCH,wBAAwB,CAACG,QAAQ,GAAG,IAAIH,wBAAwB,EAAE;MAClEA,wBAAwB,CAACG,QAAQ,CAACC,UAAU,CAAC,IAAIL,sBAAsB,EAAE,CAAC;MAC1E,IAAI,OAAOM,OAAO,KAAK,WAAW;MAC9B;MACAA,OAAO,CAACC,GAAG,CAACC,iBAAiB,KAAK,WAAW,EAAE;QAC/CP,wBAAwB,CAACG,QAAQ,CAACC,UAAU,CAAC,IAAIP,eAAe,EAAE,CAAC;MACvE;IACJ;IACA,OAAOG,wBAAwB,CAACG,QAAQ;EAC5C;AACJ;AACA,OAAO,SAASK,kBAAkBA,CAAA,EAAG;EACjC,OAAOR,wBAAwB,CAACE,WAAW,EAAE;AACjD;AACA,OAAO,eAAeO,gBAAgBA,CAACC,OAAO,EAA0C;EAAA,IAAxCC,eAAe,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,kBAAkB,EAAE;EAClF,KAAK,MAAMO,OAAO,IAAIJ,eAAe,CAACK,QAAQ,EAAE;IAC5C;IACA;IACA,IAAID,OAAO,YAAYlB,eAAe,EAAE;MACpC,MAAMoB,WAAW,GAAGP,OAAO,EAAEO,WAAW;MACxC,IAAIA,WAAW,EAAE;QACb,MAAMF,OAAO,CAACG,WAAW,CAACD,WAAW,CAAC;MAC1C,CAAC,MACI;QACD,MAAMF,OAAO,CAACI,kBAAkB,EAAE;MACtC;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}